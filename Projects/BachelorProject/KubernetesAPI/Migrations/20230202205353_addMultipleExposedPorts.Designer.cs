// <auto-generated />
using System;
using KubernetesAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KubernetesAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230202205353_addMultipleExposedPorts")]
    partial class addMultipleExposedPorts
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KubernetesAPI.Models.DBModels.ConnectorType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("MaxReplicas")
                        .HasColumnType("int");

                    b.Property<string>("Repository")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ConnectorType");
                });

            modelBuilder.Entity("KubernetesAPI.Models.DBModels.ExposedPort", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ConnectorTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConnectorTypeId");

                    b.ToTable("ExposedPort");
                });

            modelBuilder.Entity("KubernetesAPI.Models.DBModels.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ConnectorTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Digest")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastPushed")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ConnectorTypeId");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("KubernetesAPI.Models.DBModels.ExposedPort", b =>
                {
                    b.HasOne("KubernetesAPI.Models.DBModels.ConnectorType", null)
                        .WithMany("ExposedPorts")
                        .HasForeignKey("ConnectorTypeId");
                });

            modelBuilder.Entity("KubernetesAPI.Models.DBModels.Image", b =>
                {
                    b.HasOne("KubernetesAPI.Models.DBModels.ConnectorType", "ConnectorType")
                        .WithMany("Images")
                        .HasForeignKey("ConnectorTypeId");

                    b.Navigation("ConnectorType");
                });

            modelBuilder.Entity("KubernetesAPI.Models.DBModels.ConnectorType", b =>
                {
                    b.Navigation("ExposedPorts");

                    b.Navigation("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
